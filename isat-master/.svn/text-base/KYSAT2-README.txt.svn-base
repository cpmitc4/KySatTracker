Tracker Code Readme
By Elijah Montgomery <elijah.montgomery@uky.edu>

This readme file is meant to serve as some basic documentation for those who wish to modify the code further in the future. This is in no way exhaustive, nor is it meant to replace code comments, but to be something of an introduction to the structure of the tracking code.

The necessary code for the website is broken into the following folders(considering the current directory as the root directory):
js/ - SGP4 algorithms for calculating satellite positions based on TLE data and their associated unit tests
viz/ - Contains the actual driver code to setup the visualization and draw the objects at their positions as well as the files to check for browser compatibility. The tle/ directory within this directory contains tle files for various objects, though we have modified the tracker so it only uses "custom.txt" so that only a few objects are loaded. This also contains folders with the necessary Open Source javascript libraries like Cesium(described below), jQuery, etc. and the necessary CSS stylesheets and images.

The rest of the included folders are from our initial fork of Koansys's code, but not necessary for running the site itself.

The rendering code is based principally on the open source Cesium library from AGI. The source code is currently hosted on Github at https://github.com/AnalyticalGraphicsInc/cesium . Cesium is under the Apache license mostly, but some contributed code is under slightly different, but still Open Source, licenses, as detailed in the repository. Cesium provides the framework to draw the globe/map views, fetch the map/globe textures and overlay geographical information(in our case, satellite locations) on the map/globe. Because of the structure of the tracker and the Cesium team's commitment to backwards compatibility, updating Cesium for bug/performance fixes and new features is easy. Simply download the latest release version of Cesium from http://cesium.agi.com/downloads.html, extract it to a known directory and copy the entire contents of the Cesium directory to viz/cesium. After that, the only step is to add any new files to the repository to make sure all changes make it into source control. The makefile automatically copies the entire cesium directory, keeping it's structure intact, so there should be no modifications needed on that end.

The tracking code is an addition by Koansys, on top of the Cesium framework to track satellites using TLE data. Koansys's work on top of Cesium is currently hosted at https://github.com/koansys/isat . This code is copyright NASA and under the 2-clause BSD license. We have essentially forked this repository, in its entirety, even though it is not all needed for the website itself as it includes a thesis paper describing the SGP4 algorithms used to calculate the positions as well as the original Matlab implementations and other information. Take care in updating because Koansys may make changes that break our code changes, so be sure to pay full attention when merging upstream changes.

Our modifications on top of this existing codebase are only to the static images, to change the theme and to the files "viz/index.js" and "viz/index.html", mostly the javascript file. "index.js" contains the actual driver code that provides a bridge between the Cesium library and the SGP4 algorithms for calculating the positions. This file provides a driver of sorts to actually control the drawing of the visualization. Our modifications changed it to only allow a single file with TLE information to be loaded(tle/custom.txt) as well as to load custom icons for the satellites based on the Norad ID of the object in the TLE data. The other major modification is to automatically draw the orbit of the first satellite in the custom.txt TLE file on startup, so that KYSat-2's(which always needs to be the first) orbit will always be shown on startup so it is easy to find. To find our modifications in this code or in index.html, search for "CHANGED KYS2", which is the notation for every place in the code that we diverge from the original Koansys code. There is one place within the code in "index.js" that will need to be changed closer to launch, once Norad assigns a Norad ID to KySat 2. This place is marked with "TODOKYS2" and will require simply changing the listed Norad ID to KySat-2's as described in the code. The entire launch configuration process is detailed in the Installation Guide.